{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"index.html","title":"Documentaci\u00f3n del Proyecto","text":"<p>Bienvenido \ud83d\udc4b Esta es una plantilla basada en MkDocs + Material for MkDocs para cursos y proyectos.</p>"},{"location":"index.html#empezar-rapido-3-pasos","title":"Empezar r\u00e1pido (3 pasos)","text":"<ol> <li>Edita el nombre del sitio en <code>mkdocs.yml</code>:    ```yaml    site_name: Documentaci\u00f3n del Curso    theme:      name: material</li> </ol>"},{"location":"comandos.html","title":"Encabezados","text":"<pre><code># T\u00edtulo \n## T\u00edtulo H2\n### T\u00edtulo H3\n</code></pre>"},{"location":"comandos.html#titulo-h1","title":"T\u00edtulo H1","text":""},{"location":"comandos.html#titulo-h2","title":"T\u00edtulo H2","text":""},{"location":"comandos.html#titulo-h3","title":"T\u00edtulo H3","text":""},{"location":"comandos.html#enfasis-y-codigo-en-linea","title":"\u00c9nfasis y c\u00f3digo en l\u00ednea","text":"<pre><code>**negritas**, *cursivas*, ~~tachado~~, `c\u00f3digo en l\u00ednea`\n</code></pre> <p>negritas, cursivas, ~~tachado~~, <code>c\u00f3digo en l\u00ednea</code></p>"},{"location":"comandos.html#citas-blockquote","title":"Citas (blockquote)","text":"<pre><code>&gt; Esta es una cita destacada.\n&gt; Puede tener m\u00faltiples l\u00edneas.\n</code></pre> <p>Esta es una cita destacada. Puede tener m\u00faltiples l\u00edneas.</p>"},{"location":"comandos.html#enlaces","title":"Enlaces","text":"<pre><code>[Enlace directo](https://www.iberopuebla.mx/)\n\n[Texto del enlace de referencia][doc-ref]\n\n[doc-ref]: https://www.iberopuebla.mx//docs \"T\u00edtulo opcional\"\n</code></pre> <p>Enlace directo</p> <p>Texto del enlace de referencia</p>"},{"location":"comandos.html#listas-vinetas-numeradas-y-de-tareas","title":"Listas: vi\u00f1etas, numeradas y de tareas","text":"<pre><code>- Item A\n    * Subitem A.1\n    * Subitem A.2\n- Item B\n    - Subitem B.1\n    - Subitem B.2\n\n1.  Paso 1\n    1.  Paso 1.1\n    2.  Paso 1.2\n        1.  Paso 1.2.1\n        2.  Paso 1.2.2\n\n- [x] Hecho\n- [ ] Pendiente\n</code></pre> <ul> <li>Item A<ul> <li>Subitem A.1</li> <li>Subitem A.2</li> </ul> </li> <li>Item B<ul> <li>Subitem B.1</li> <li>Subitem B.2</li> </ul> </li> </ul> <ol> <li> <p>Paso 1</p> <ol> <li>Paso 1.1</li> <li>Paso 1.2<ol> <li>Paso 1.2.1</li> <li>Paso 1.2.2</li> </ol> </li> </ol> </li> <li> <p> Hecho</p> </li> <li> Pendiente</li> </ol>"},{"location":"comandos.html#tablas","title":"Tablas","text":"<pre><code>| Componente | Cant. | Nota        |\n|-----------:|:-----:|-------------|\n| Sensor X   | 2     | I2C         |\n| MCU Y      | 1     | WiFi/BLE    |\n</code></pre> Componente Cant. Nota Sensor X 2 I2C MCU Y 1 WiFi/BLE"},{"location":"comandos.html#imagenes","title":"Im\u00e1genes","text":"<pre><code>![Diagrama del sistema](recursos/imgs/ibero.jpeg)\n\n&lt;!-- Control de tama\u00f1o usando HTML (cuando se requiera) --&gt;\n&lt;img src=\"../recursos/imgs/ibero.jpeg\" alt=\"Diagrama del sistema\" width=\"420\"&gt;\n</code></pre>"},{"location":"comandos.html#pdfs-enlace-y-embebido","title":"PDFs (enlace y embebido)","text":"<pre><code>[Descargar especificaci\u00f3n (PDF)](recursos/archivos/Calendario.pdf)\n\n&lt;!-- Embed (requiere navegador compatible) --&gt;\n&lt;object data=\"recursos/archivos/Calendario.pdf\" type=\"application/pdf\" width=\"100%\" height=\"600\"&gt;\n  &lt;p&gt;No se pudo mostrar el PDF. &lt;a href=\"../recursos/archivos/Calendario.pdf\"&gt;Descargar&lt;/a&gt;&lt;/p&gt;\n&lt;/object&gt;\n</code></pre> <p>Descargar especificaci\u00f3n (PDF)</p>"},{"location":"comandos.html#admonitions-material","title":"Admonitions (Material)","text":"<pre><code>!!! note \"Nota\"\n    Esto es una nota informativa.\n\n!!! tip \"Sugerencia\"\n    Un consejo breve para el usuario.\n\n!!! warning \"Advertencia\"\n    Precauciones o riesgos a considerar.\n\n??? info \"M\u00e1s informaci\u00f3n (colapsable)\"\n    Contenido adicional que se puede expandir.\n</code></pre> <p>Nota</p> <p>Esto es una nota informativa.</p> <p>Sugerencia</p> <p>Un consejo breve para el usuario.</p> <p>Advertencia</p> <p>Precauciones o riesgos a considerar.</p> M\u00e1s informaci\u00f3n (colapsable) <p>Contenido adicional que se puede expandir.</p>"},{"location":"comandos.html#codigo-con-resaltado","title":"C\u00f3digo con resaltado","text":"<p><pre><code>```python\ndef medir(canal: int) -&gt; dict:\n    # Simulaci\u00f3n de lectura\n    return {\"canal\": canal, \"valor\": 523, \"unidad\": \"mV\"}\n\nprint(medir(1))\n</code></pre> <pre><code>```python\ndef medir(canal: int) -&gt; dict:\n    # Simulaci\u00f3n de lectura\n    return {\"canal\": canal, \"valor\": 523, \"unidad\": \"mV\"}\n\nprint(medir(1))\n</code></pre></p>"},{"location":"comandos.html#separador-horizontal","title":"Separador horizontal","text":"<pre><code>---\n</code></pre>"},{"location":"comandos.html#listas-anidadas-con-codigo-y-notas","title":"Listas anidadas con c\u00f3digo y notas","text":"<pre><code>- **M\u00f3dulo A**\n  - Funci\u00f3n: `procesar()`\n  - Entrada:\n    - `signal` (float)\n    - `freq` (Hz)\n  - Salida:\n    - JSON con `valor`, `unidad`\n  - !!! note\n        Documenta rangos v\u00e1lidos y casos borde.\n</code></pre> <ul> <li>M\u00f3dulo A</li> <li>Funci\u00f3n: <code>procesar()</code></li> <li>Entrada:<ul> <li><code>signal</code> (float)</li> <li><code>freq</code> (Hz)</li> </ul> </li> <li>Salida:<ul> <li>JSON con <code>valor</code>, <code>unidad</code></li> </ul> </li> <li> <p>Note</p> <pre><code>Documenta rangos v\u00e1lidos y casos borde.\n</code></pre> </li> </ul>"},{"location":"comandos.html#bloques-de-cita-con-codigo-pseudo-logs","title":"Bloques de cita con c\u00f3digo (pseudo-logs)","text":"<pre><code>&gt; **Log:**\n&gt; ```\n&gt; [12:00:00] Init OK\n&gt; [12:00:01] Conectando a I2C...\n&gt; [12:00:02] Lectura: 523 mV\n&gt; ```\n</code></pre> <p>Log: <pre><code>[12:00:00] Init OK\n[12:00:01] Conectando a I2C...\n[12:00:02] Lectura: 523 mV\n</code></pre></p>"},{"location":"ejemplo.html","title":"\ud83d\udcda Ejemplo de Documentaci\u00f3n del Proyecto","text":"<p>Plantilla gen\u00e9rica para documentar proyectos acad\u00e9micos o de ingenier\u00eda. Copia y adapta las secciones seg\u00fan tu necesidad.</p>"},{"location":"ejemplo.html#1-resumen","title":"1) Resumen","text":"<ul> <li>Nombre del proyecto: Mi Proyecto </li> <li>Equipo / Autor(es): Nombre(s) </li> <li>Curso / Asignatura: Nombre del curso </li> <li>Fecha: DD/MM/AAAA </li> <li>Descripci\u00f3n breve: Una o dos l\u00edneas que expliquen qu\u00e9 hace y por qu\u00e9.</li> </ul> <p>Consejo</p> <p>Mant\u00e9n este resumen corto (m\u00e1x. 5 l\u00edneas). Lo dem\u00e1s va en secciones espec\u00edficas.</p>"},{"location":"ejemplo.html#2-objetivos","title":"2) Objetivos","text":"<ul> <li>General: Qu\u00e9 se pretende lograr en t\u00e9rminos amplios.</li> <li>Espec\u00edficos:</li> <li>OE1\u2026</li> <li>OE2\u2026</li> <li>OE3\u2026</li> </ul>"},{"location":"ejemplo.html#3-alcance-y-exclusiones","title":"3) Alcance y Exclusiones","text":"<ul> <li>Incluye: Qu\u00e9 funcionalidades/entregables s\u00ed est\u00e1n en el proyecto.</li> <li>No incluye: Qu\u00e9 queda fuera para evitar malentendidos.</li> </ul>"},{"location":"ejemplo.html#4-requisitos","title":"4) Requisitos","text":"<p>Software - SO compatible (Windows/Linux/macOS) - Python 3.x / Node 18+ / Arduino IDE / etc. - Dependencias (p. ej., pip/requirements, npm packages)</p> <p>Hardware (si aplica) - MCU / Sensores / Actuadores / Fuente de poder - Herramientas (mult\u00edmetro, caut\u00edn, etc.)</p> <p>Conocimientos previos - Programaci\u00f3n b\u00e1sica en X - Electr\u00f3nica b\u00e1sica - Git/GitHub</p>"},{"location":"ejemplo.html#5-instalacion","title":"5) Instalaci\u00f3n","text":"<pre><code># 1) Clonar\ngit clone https://github.com/&lt;usuario&gt;/&lt;repo&gt;.git\ncd &lt;repo&gt;\n\n# 2) (Opcional) Crear entorno virtual\npython -m venv .venv\n# macOS/Linux\nsource .venv/bin/activate\n# Windows (PowerShell)\n.venv\\Scripts\\Activate.ps1\n\n# 3) Instalar dependencias (ejemplos)\npip install -r requirements.txt\n# o, si es Node:\nnpm install\n</code></pre>"},{"location":"gitcmds.html","title":"\ud83d\ude80 Comandos b\u00e1sicos de Git (primeros pasos)","text":"<p>En este curso solo usaremos los comandos esenciales de Git para trabajar con repositorios.</p>"},{"location":"gitcmds.html#1-clonar-un-repositorio","title":"1. Clonar un repositorio","text":"<p>Copia un proyecto de GitHub a tu computadora.</p> <pre><code>git clone https://github.com/usuario/repositorio.git\n</code></pre>"},{"location":"gitcmds.html#2-verificar-cambios","title":"2. Verificar cambios","text":"<p>Muestra qu\u00e9 archivos has modificado o agregado.</p> <pre><code>git status\n</code></pre>"},{"location":"gitcmds.html#3-preparar-cambios","title":"3. Preparar cambios","text":"<p>Agrega archivos para guardarlos en el pr\u00f3ximo commit.</p> <pre><code>git add archivo.txt\ngit add .   # agrega todos los archivos modificados\n</code></pre>"},{"location":"gitcmds.html#4-guardar-cambios-commit","title":"4. Guardar cambios (commit)","text":"<p>Guarda tus cambios con un mensaje descriptivo.</p> <pre><code>git commit -m \"Descripci\u00f3n breve de los cambios\"\n</code></pre>"},{"location":"gitcmds.html#5-subir-cambios-al-repositorio-push","title":"5. Subir cambios al repositorio (push)","text":"<p>Env\u00eda tus commits locales al repositorio en GitHub.</p> <pre><code>git push origin main\n</code></pre>"},{"location":"gitcmds.html#6-traer-cambios-del-remoto-pull","title":"6. Traer cambios del remoto (pull)","text":"<p>Actualiza tu proyecto con los \u00faltimos cambios de GitHub.</p> <pre><code>git pull origin main\n</code></pre>"},{"location":"gitcmds.html#flujo-tipico-de-trabajo","title":"Flujo t\u00edpico de trabajo","text":"<ol> <li> <p>Traer cambios del remoto <pre><code>git pull origin main\n</code></pre></p> </li> <li> <p>Editar tus archivos de proyecto.</p> </li> <li> <p>Preparar los cambios <pre><code>git add .\n</code></pre></p> </li> <li> <p>Guardar los cambios <pre><code>git commit -m \"Mensaje descriptivo\"\n</code></pre></p> </li> <li> <p>Enviar los cambios al remoto <pre><code>git push origin main\n</code></pre></p> </li> </ol> <p>Consejo</p> <p>Piensa en este ciclo como un loop infinito: cada vez que quieras contribuir \u2192 primero <code>pull</code>, despu\u00e9s <code>add</code> + <code>commit</code>, y finalmente <code>push</code>.</p>"},{"location":"presentacion.html","title":"\ud83d\udc4b \u00a1Hola! Soy Carlos Alberto V\u00e1zquez Peraza","text":"<p>\u201cHubo una vez que no chambi\u00e9 por 8 meses; gracias a Dios, al noveno mes nac\u00ed.\u201d \u2728  </p>"},{"location":"presentacion.html#sobre-mi","title":"\ud83e\udeaa Sobre m\u00ed","text":"<ul> <li>Nombre: Carlos Alberto V\u00e1zquez Peraza</li> <li>Edad: 17</li> <li>De: Xalapa, Veracruz, M\u00e9xico \u2014 nacido en C\u00f3rdoba, Veracruz</li> <li>Idiomas: Espa\u00f1ol \u2022 Ingl\u00e9s \u2022 Franc\u00e9s (intermedio)</li> <li>Estudiante de: Mecatr\u00f3nica y M\u00fasica</li> <li>Tecnolog\u00edas que manejo: Python \u2022 C \u2022 C++ \u2022 Rust</li> </ul>"},{"location":"presentacion.html#lo-que-me-gusta","title":"\ud83d\udcab Lo que me gusta","text":"<ul> <li>M\u00fasica: Electro swing</li> <li>Pel\u00edculas: Interestelar \u2022 Nobody</li> <li>Lectura: Terror \u2022 Autoayuda/Desarrollo personal</li> <li>Comidas favoritas: Quecas \u2022 Huevo con frijol</li> <li>Hobbies: Videojuegos \u2022 Estudiar programaci\u00f3n \u2022 Aprender nuevas habilidades</li> </ul>"},{"location":"presentacion.html#lo-que-hago-y-me-mueve","title":"\ud83c\udf31 Lo que hago y me mueve","text":"<ul> <li>Metas personales: Aprender y construir proyectos propios, viajar a Europa (especialmente Alemania), crecer en mecatr\u00f3nica y m\u00fasica</li> <li>Intereses: Tecnolog\u00eda, dise\u00f1o de sistemas, videojuegos, series como rick and morty</li> <li>Me encanta conectar con: Personas curiosas, gamers </li> </ul>"},{"location":"presentacion.html#un-poco-de-mi-mundo","title":"\ud83d\udcf8 Un poco de mi mundo","text":"<p>Momentos que me definen</p> <p>  Mis pap\u00e1s</p> <p>  Mi mam\u00e1 y yo</p> <p>  Yoko y Duquesita (falta Kiki)</p>"},{"location":"presentacion.html#de-donde-vengo","title":"\ud83d\uddfa\ufe0f De d\u00f3nde vengo","text":"<ul> <li>Nac\u00ed en: C\u00f3rdoba, Veracruz</li> <li>Historia breve: He tenido una vida incre\u00edble con altos y bajos; cada experiencia vali\u00f3 la pena para ser quien soy hoy.</li> <li>Familia: Dos hermanas y tres perritas</li> </ul>"},{"location":"presentacion.html#cosas-random-sobre-mi","title":"\ud83e\udde9 Cosas random sobre m\u00ed","text":"<ul> <li>Me encanta jugar juegos de mesa</li> <li>Disfruto ver videos de misterio</li> <li>Me gusta armar y construir cosas</li> <li>Ver pelis con mi mam\u00e1 es de mis planes favoritos</li> </ul>"},{"location":"presentacion.html#viajes-y-suenos","title":"\u2708\ufe0f Viajes y sue\u00f1os","text":"<ul> <li>A\u00fan no he viajado, pero me encantar\u00eda ir a Alemania</li> </ul>"},{"location":"presentacion.html#ahora-mismo","title":"\ud83e\udde0 Ahora mismo","text":"<ul> <li>Estudiando: Mecatr\u00f3nica y teor\u00eda musical</li> <li>Practicando: Proyectos en Python, C/C++ y Rust</li> <li>Escuchando: Electro swing y playlists para concentrarme</li> <li>Aprendiendo: Nuevas habilidades t\u00e9cnicas y creativas</li> </ul>"},{"location":"presentacion.html#ventas-y-mayoreo","title":"\ud83d\uded2 Ventas y mayoreo","text":"<p>Productos y licencias que ofrezco. Escr\u00edbeme para precios actualizados, promociones por volumen y m\u00e9todos de pago.</p> Producto/Servicio Duraci\u00f3n/Presentaci\u00f3n Modalidad Notas Licencia ChatGPT 2 meses Digital Activaci\u00f3n remota Licencia ChatGPT 3 meses Digital Soporte b\u00e1sico Licencia ChatGPT 1 a\u00f1o Digital Renovaci\u00f3n opcional Licencia Perplexity 2 meses Digital Acceso premium Licencia Perplexity 3 meses Digital Consulta guiada Licencia Perplexity 1 a\u00f1o Digital Mejor precio por a\u00f1o Spotify Premium 1 a\u00f1o Digital Cuenta nueva o existente AIProd 1 a\u00f1o (o plan acordado) Digital Confirmar plan disponible MagSafe (accesorios) Mayoreo (packs) F\u00edsico Descuentos por volumen <p>Puedo generar paquetes combinados (por ejemplo, ChatGPT + Spotify + Perplexity) a precio especial por mayoreo. Entrega inmediata en productos digitales.</p>"},{"location":"presentacion.html#contacto-y-redes","title":"\ud83d\udcec Contacto y redes","text":"<ul> <li>Email: mrcavp@gmail.com</li> <li>WhatsApp: 228 496 3952</li> <li>Instagram: @mr_logros</li> </ul>"},{"location":"presentacion.html#mi-emprendimiento","title":"\ud83d\udccc Mi emprendimiento","text":"<p>Comenc\u00e9 vendiendo dulces en la escuela y luego pase a vendedor de mayoreo. Mi sue\u00f1o es tener mi propio negocio alg\u00fan d\u00eda. Gracias por apoyar mi emprendimiento.</p>"},{"location":"presentacion.html#habilidades","title":"\ud83e\uddf0 Habilidades","text":""},{"location":"presentacion.html#lenguajes-de-programacion","title":"Lenguajes de programaci\u00f3n","text":"<p>Python \u2022 C \u2022 C++ \u2022 Rust</p>"},{"location":"presentacion.html#areas-de-fortaleza","title":"\u00c1reas de fortaleza","text":"<p>Matem\u00e1ticas \u2022 F\u00edsica \u2022 Tecnolog\u00eda \u2022 Programaci\u00f3n</p>"},{"location":"Primer%20parcial/Actividad%201.html","title":"LED parpadeante con 555","text":""},{"location":"Primer%20parcial/Actividad%201.html#objetivo","title":"Objetivo","text":"<p>Implementar un oscilador simple con el temporizador 555 para encender y apagar un LED de forma peri\u00f3dica, registrando materiales, conexiones y verificaci\u00f3n.</p>"},{"location":"Primer%20parcial/Actividad%201.html#descripcion-rapida-del-555","title":"Descripci\u00f3n r\u00e1pida del 555","text":"<p>El 555 funciona como generador de onda cuadrada en modo astable: un capacitor se carga y descarga a trav\u00e9s de dos resistencias y la salida (pin 3) conmuta cada vez que el voltaje del capacitor cruza los umbrales internos.</p>"},{"location":"Primer%20parcial/Actividad%201.html#materiales-utilizados","title":"Materiales utilizados","text":"<ul> <li>Protoboard  </li> <li>NE555  </li> <li>LED + resistencia limitadora (220 \u03a9 \u2013 1 k\u03a9)  </li> <li>R1 y R2 para el astable (1 k\u03a9 \u2013 100 k\u03a9 t\u00edpicos)  </li> <li>Capacitor electrol\u00edtico (1 \u00b5F \u2013 470 \u00b5F)  </li> <li>Jumpers  </li> <li>Fuente DC (5\u20139 V)</li> </ul>"},{"location":"Primer%20parcial/Actividad%201.html#conexiones-paso-a-paso","title":"Conexiones paso a paso","text":"<ol> <li>Pin 1 \u2192 GND  </li> <li>Pin 8 \u2192 VCC  </li> <li>Pin 4 (RESET) \u2192 VCC  </li> <li>Unir pines 2 (TRIG) y 6 (THR)  </li> <li>R1 entre VCC y pin 7 (DIS)  </li> <li>R2 entre pin 7 (DIS) y pines 2/6  </li> <li>Capacitor C entre pines 2/6 y GND (positivo a 2/6 si es electrol\u00edtico)  </li> <li>Pin 3 (OUT) \u2192 resistencia \u2192 \u00e1nodo del LED; c\u00e1todo \u2192 GND  </li> <li>Alimentar la tarjeta (VCC y GND a rieles)</li> </ol> <p>Tip: valores grandes de R1/R2/C reducen la frecuencia; valores peque\u00f1os la aumentan.</p>"},{"location":"Primer%20parcial/Actividad%201.html#prueba-y-verificacion","title":"Prueba y verificaci\u00f3n","text":"<ul> <li>Encender la fuente y observar el LED parpadeando.  </li> <li>Si no hay parpadeo, revisar: polaridad del LED y del capacitor, uni\u00f3n 2\u20136, RESET en alto, continuidad de R1/R2 y orientaci\u00f3n del CI.</li> </ul>"},{"location":"Primer%20parcial/Actividad%201.html#evidencias","title":"Evidencias","text":""},{"location":"Primer%20parcial/Actividad%202.html","title":"Blink en ESP32","text":""},{"location":"Primer%20parcial/Actividad%202.html#objetivo","title":"Objetivo","text":"<p>Generar un parpadeo de 1 segundo encendido y 1 segundo apagado en un LED controlado por un GPIO del ESP32.</p>"},{"location":"Primer%20parcial/Actividad%202.html#materiales","title":"Materiales","text":"<ul> <li>ESP32 DOIT DEVKIT V1.</li> <li>LED rojo y resistencia limitadora (~220\u2013330 \u03a9).</li> <li>Protoboard, jumpers y cable USB.</li> </ul>"},{"location":"Primer%20parcial/Actividad%202.html#conexiones","title":"Conexiones","text":"<ol> <li>\u00c1nodo del LED al GPIO 23 a trav\u00e9s de la resistencia.  </li> <li>C\u00e1todo del LED a GND del ESP32.</li> </ol>"},{"location":"Primer%20parcial/Actividad%202.html#codigo","title":"C\u00f3digo","text":"<pre><code>#define LED 23\n\nvoid setup() {\n  pinMode(LED, OUTPUT); // Configura el pin del LED como salida\n}\n\nvoid loop() {\n  digitalWrite(LED, HIGH); // Enciende el LED\n  delay(1000);             // Espera 1 segundo\n  digitalWrite(LED, LOW);  // Apaga el LED\n  delay(1000);             // Espera 1 segundo\n}\n</code></pre>"},{"location":"Primer%20parcial/Actividad%202.html#prueba","title":"Prueba","text":"<ul> <li>Cargar el sketch y observar el parpadeo continuo.  </li> <li>Si no parpadea: comprobar el pin elegido, polaridad del LED y continuidad de la resistencia.</li> </ul>"},{"location":"Primer%20parcial/Actividad%202.html#evidencias","title":"Evidencias","text":""},{"location":"Primer%20parcial/Actividad%203.html","title":"LED con bot\u00f3n en ESP32","text":""},{"location":"Primer%20parcial/Actividad%203.html#objetivo","title":"Objetivo","text":"<p>Encender un LED cuando se presiona un bot\u00f3n, usando un pin de entrada para el pulsador y un pin de salida para el LED, con mensajes por puerto serie.</p>"},{"location":"Primer%20parcial/Actividad%203.html#materiales","title":"Materiales","text":"<ul> <li>ESP32 DOIT DEVKIT V1 y cable USB.</li> <li>LED rojo y resistencia limitadora (~220\u2013330 \u03a9).</li> <li>Pulsador y resistencia de pull\u2011down (~10 k\u03a9) o uso de pull\u2011up interno.</li> <li>Protoboard y jumpers.</li> </ul>"},{"location":"Primer%20parcial/Actividad%203.html#conexiones","title":"Conexiones","text":"<ol> <li>LED: \u00e1nodo al GPIO 12 mediante la resistencia; c\u00e1todo a GND.</li> <li>Bot\u00f3n: un lado a 3V3; el otro al GPIO 34 con resistencia de 10 k\u03a9 a GND (pull\u2011down).    Alternativa: configurar INPUT_PULLUP y llevar el bot\u00f3n a GND.</li> </ol>"},{"location":"Primer%20parcial/Actividad%203.html#codigo","title":"C\u00f3digo","text":"<pre><code>const int led = 12;\nconst int btn = 34;\n\nvoid setup() {\n  Serial.begin(115200);\n  pinMode(led, OUTPUT);\n  pinMode(btn, INPUT); // si usas pull\u2011up interno, cambia a INPUT_PULLUP\n}\n\nvoid loop() {\n  int estado = digitalRead(btn);\n  if (estado == 1) {\n    digitalWrite(led, 1);\n    Serial.println(\"on\");\n  } else {\n    digitalWrite(led, 0);\n    Serial.println(\"off\");\n  }\n}\n</code></pre>"},{"location":"Primer%20parcial/Actividad%203.html#prueba-y-verificacion","title":"Prueba y verificaci\u00f3n","text":"<ul> <li>Al presionar el bot\u00f3n, el LED enciende y el monitor serie muestra \u201con\u201d; al soltar, \u201coff\u201d.</li> <li>Si hay falsos disparos: comprobar tierra com\u00fan, resistencias, contactos del pulsador y considerar un peque\u00f1o delay o antirrebote por software.</li> </ul>"},{"location":"Primer%20parcial/Actividad%203.html#evidencias","title":"Evidencias","text":""},{"location":"Primer%20parcial/Actividad%204.html","title":"Control de LED por Bluetooth (ESP32)","text":""},{"location":"Primer%20parcial/Actividad%204.html#objetivo","title":"Objetivo","text":"<p>Conectar el ESP32 por Bluetooth cl\u00e1sico (SPP) a un tel\u00e9fono y, al recibir \u201cON\u201d u \u201cOFF\u201d, cambiar el estado de un LED, mostrando en el monitor serie lo recibido.</p>"},{"location":"Primer%20parcial/Actividad%204.html#materiales","title":"Materiales","text":"<ul> <li>ESP32 DOIT DEVKIT V1 e IDE de Arduino.</li> <li>LED y resistencia limitadora (~220\u2013330 \u03a9).</li> <li>Protoboard y jumpers.</li> <li>App de terminal Bluetooth (por ejemplo, \u201cSerial Bluetooth Terminal\u201d).</li> </ul>"},{"location":"Primer%20parcial/Actividad%204.html#conexiones","title":"Conexiones","text":"<ol> <li>LED: \u00e1nodo a un GPIO (ej. 12 o 23) por medio de la resistencia; c\u00e1todo a GND.</li> <li>USB para alimentar el ESP32 y usar el monitor serie.</li> </ol>"},{"location":"Primer%20parcial/Actividad%204.html#codigo","title":"C\u00f3digo","text":"<pre><code>#include \"BluetoothSerial.h\"\nBluetoothSerial SerialBT;\nbyte led = 12; // o 23\n\nvoid setup() {\n  Serial.begin(115200);\n  SerialBT.begin(\"el tlacoyo\"); // nombre visible del dispositivo\n  pinMode(led, OUTPUT);\n}\n\nvoid loop() {\n  if (SerialBT.available()) {\n    String mensaje = SerialBT.readString();\n    Serial.println(\"Recibido: \" + mensaje);\n\n    if (mensaje == \"ON\") {\n      digitalWrite(led, 1);\n      Serial.println(\"On\");\n    } else if (mensaje == \"OFF\") {\n      digitalWrite(led, 0);\n      Serial.println(\"Off\");\n    }\n  }\n  delay(1000);\n}\n</code></pre>"},{"location":"Primer%20parcial/Actividad%204.html#prueba","title":"Prueba","text":"<ul> <li>Emparejar el tel\u00e9fono con el nombre del ESP32 y abrir la app de terminal.</li> <li>Enviar \u201cON\u201d para encender y \u201cOFF\u201d para apagar; verificar en el monitor serie las cadenas recibidas.</li> </ul>"},{"location":"Primer%20parcial/Actividad%204.html#notas-rapidas","title":"Notas r\u00e1pidas","text":"<ul> <li>Si no aparece el dispositivo, reiniciar el ESP32 y comprobar que el Bluetooth del tel\u00e9fono est\u00e9 activo.</li> <li>Para tolerar may\u00fasculas/min\u00fasculas: usar mensaje.toUpperCase() antes de comparar.</li> <li>Evitar pines solo\u2011entrada para el LED (p. ej., 34\u201339).</li> </ul>"},{"location":"Primer%20parcial/Actividad%204.html#evidencias","title":"Evidencias","text":""},{"location":"Segundo%20Parcial/Actividad%20%205.html","title":"Control de un motor DC con ESP32 y L298N","text":""},{"location":"Segundo%20Parcial/Actividad%20%205.html#objetivo","title":"Objetivo","text":"<p>Variar la velocidad y el sentido de un motor DC con ESP32 y L298N alimentado desde fuente de laboratorio, dejando evidencia del cableado y el sketch. </p>"},{"location":"Segundo%20Parcial/Actividad%20%205.html#conceptos-clave","title":"Conceptos clave","text":"<ul> <li>Frecuencia: ciclos por segundo del PWM.</li> <li>Duty: porcentaje en ALTO que fija la potencia media al motor. </li> <li>Resoluci\u00f3n: pasos del duty (2^bits). </li> </ul>"},{"location":"Segundo%20Parcial/Actividad%20%205.html#materiales","title":"Materiales","text":"<ul> <li>ESP32 con IDE de Arduino. </li> <li>M\u00f3dulo L298N (canal A: ENA, IN1, IN2; OUT1, OUT2). </li> <li>Un motor DC tipo TT. </li> <li>Fuente DC de laboratorio; protoboard y jumpers. </li> </ul>"},{"location":"Segundo%20Parcial/Actividad%20%205.html#conexiones-un-canal","title":"Conexiones (un canal)","text":"<ol> <li>Fuente + \u2192 \u201c12V\u201d del L298N; Fuente \u2212 \u2192 GND del L298N y GND del ESP32 (tierra com\u00fan). </li> <li>Motor \u2192 OUT1 y OUT2 del L298N (canal A).</li> <li>IN1 \u2192 GPIO 18, IN2 \u2192 GPIO 19; ENA (PWM) \u2192 GPIO 21 del ESP32.</li> </ol>"},{"location":"Segundo%20Parcial/Actividad%20%205.html#codigo","title":"C\u00f3digo","text":"<pre><code>#define IN1 18\n#define IN2 19\n#define PWM 21\n\nvoid setup() {\n  pinMode(IN1, OUTPUT);\n  pinMode(IN2, OUTPUT);\n  ledcAttach(PWM, 1000, 8); // 1 kHz, 8 bits\n}\n\nvoid loop() {\n  // Adelante\n  digitalWrite(IN1, 1);\n  digitalWrite(IN2, 0);\n  ledcWrite(PWM, 200);\n  delay(4000);\n\n  // Atr\u00e1s\n  digitalWrite(IN1, 0);\n  digitalWrite(IN2, 1);\n  ledcWrite(PWM, 200);\n  delay(4000);\n\n  // Alto\n  ledcWrite(PWM, 0);\n  delay(2000);\n}\n</code></pre>"},{"location":"Segundo%20Parcial/Actividad%20%205.html#verificacion","title":"Verificaci\u00f3n","text":"<ul> <li>Ajustar la fuente y el l\u00edmite de corriente; observar cambio de sentido y velocidad seg\u00fan duty.</li> <li>Si no arranca: revisar GND com\u00fan, jumper de habilitaci\u00f3n ENA.</li> </ul>"},{"location":"Segundo%20Parcial/Actividad%20%205.html#evidencias","title":"Evidencias","text":""},{"location":"Segundo%20Parcial/Actividad%206.html","title":"Control de velocidad con motor DC con ESP32 y L298N","text":""},{"location":"Segundo%20Parcial/Actividad%206.html#objetivo","title":"Objetivo","text":"<p>Controlar un motor DC variando velocidad mediante PWM y fijando direcci\u00f3n con dos pines digitales del ESP32, usando el L298N y una fuente DC con l\u00edmite de corriente. </p>"},{"location":"Segundo%20Parcial/Actividad%206.html#descripcion-rapida","title":"Descripci\u00f3n r\u00e1pida","text":"<ul> <li>El L298N es un puente H: IN1/IN2 definen el sentido y ENA recibe el PWM de velocidad. </li> <li>La fuente mostr\u00f3 ~11.9 V y ~0.20 A durante la prueba del motor TT; el segundo canal qued\u00f3 sin carga. </li> </ul>"},{"location":"Segundo%20Parcial/Actividad%206.html#materiales","title":"Materiales","text":"<ul> <li>Fuente GW Instek GPE\u20113323 (CC/CV, 2 canales).</li> <li>M\u00f3dulo L298N (OUT1\u2013OUT4, VIN 12V, GND, 5V, ENA/IN1/IN2). </li> <li>ESP32 DOIT DEVKIT V1. [attached_file:4]  </li> <li>Motorreductor DC tipo TT, protoboard y jumpers. [attached_file:2]</li> </ul>"},{"location":"Segundo%20Parcial/Actividad%206.html#conexiones","title":"Conexiones","text":"<ol> <li>Fuente + \u2192 \u201c12V\u201d del L298N; fuente \u2212 \u2192 GND del L298N y GND del ESP32 (tierra com\u00fan). </li> <li>Motor \u2192 OUT1 y OUT2 (canal A del L298N). </li> <li>IN1 \u2192 GPIO 25 (ESP32) e IN2 \u2192 GPIO 26 para direcci\u00f3n. </li> <li>ENA \u2192 GPIO 27 para PWM (1 kHz, 8 bits).  </li> <li>Verificar polaridades y jumper \u201c5V\u2011EN\u201d seg\u00fan el m\u00f3dulo; mantener GND com\u00fan siempre.</li> </ol>"},{"location":"Segundo%20Parcial/Actividad%206.html#codigo","title":"C\u00f3digo","text":"<pre><code>#define in1 25\n#define in2 26\n#define pwm 27\n\nvoid setup() {\n  pinMode(in1, OUTPUT);\n  pinMode(in2, OUTPUT);\n  ledcAttach(pwm, 1000, 8); // 1 kHz, 8 bits\n}\n\nvoid loop() {\n  // Acelera\n  for (int i = 0; i &lt;= 255; i++) {\n    ledcWrite(pwm, i);\n    digitalWrite(in1, 1);\n    digitalWrite(in2, 0);\n    delay(10);\n  }\n  // Desacelera\n  for (int i = 255; i &gt;= 0; i--) {\n    ledcWrite(pwm, i);\n    digitalWrite(in1, 1);\n    digitalWrite(in2, 0);\n    delay(10);\n  }\n}\n</code></pre>"},{"location":"Segundo%20Parcial/Actividad%206.html#parametros-y-notas","title":"Par\u00e1metros y notas","text":"<ul> <li>Usar ~12 V como entrada al L298N y ajustar l\u00edmite de corriente para cubrir el pico de arranque del motor.  </li> <li>Si no gira: revisar GND com\u00fan, estado de ENA, inversi\u00f3n de IN1/IN2 y l\u00edmite de corriente de la fuente. </li> </ul>"},{"location":"Segundo%20Parcial/Actividad%206.html#evidencias","title":"Evidencias","text":""},{"location":"Segundo%20Parcial/Actvidad%207.html","title":"Control de servomotores con ESP32","text":""},{"location":"Segundo%20Parcial/Actvidad%207.html#objetivo","title":"Objetivo","text":"<p>Mover un micro servo tipo SG90/Steren con se\u00f1ales PWM de 50 Hz generadas por el ESP32, mapeando \u00e1ngulos a pulsos de 1\u20132 ms y validando alimentaci\u00f3n desde fuente DC de laboratorio. </p>"},{"location":"Segundo%20Parcial/Actvidad%207.html#descripcion-rapida","title":"Descripci\u00f3n r\u00e1pida","text":"<ul> <li>Un servo est\u00e1ndar usa 50 Hz: 1 ms \u2248 0\u00b0, 1.5 ms \u2248 90\u00b0, 2 ms \u2248 180\u00b0; la alimentaci\u00f3n t\u00edpica es ~5 V y requiere GND com\u00fan con la se\u00f1al. </li> <li>El montaje muestra ESP32 + protoboard, servo micro y fuente GW Instek con canal ajustado a 12 V para laboratorio, mientras el servo recibe ~5 V regulados/USB y la se\u00f1al desde un GPIO. </li> </ul>"},{"location":"Segundo%20Parcial/Actvidad%207.html#materiales","title":"Materiales","text":"<ul> <li>ESP32 DOIT DEVKIT V1.   </li> <li>Micro servo (Steren S07-180/SG90 equivalente). </li> <li>Fuente GW Instek GPE\u20113323 para pruebas y referencia de tierra; USB para l\u00f3gica/5 V. </li> <li>Protoboard y jumpers; cableado de tres hilos del servo: rojo=Vcc, caf\u00e9/negro=GND, naranja=se\u00f1al. </li> </ul>"},{"location":"Segundo%20Parcial/Actvidad%207.html#conexiones","title":"Conexiones","text":"<ol> <li>Vcc del/los servos a 5 V regulados; nunca alimentar servos desde 3.3 V del ESP32. </li> <li>GND del 5 V de servos unido al GND del ESP32 y de la fuente (tierra com\u00fan). </li> <li>Se\u00f1al del servo a un GPIO del ESP32 (ejemplo GPIO 15); para dos servos usar dos GPIOs independientes. </li> </ol>"},{"location":"Segundo%20Parcial/Actvidad%207.html#codigo","title":"C\u00f3digo","text":"<pre><code>#define SERVO1 15\nint grados = 0;\nint duty = 0;\n\nvoid setup() {\n  // Canal de 50 Hz y resoluci\u00f3n de 12 bits (0\u20134095)\n  ledcAttachChannel(SERVO1, 50, 12, 0);\n}\n\nvoid loop() {\n  for (int i = 0; i &lt;= 180; i += 10) {\n    grados = i;\n    // map 0\u2013180\u00b0 a ~1.0\u20132.0 ms en 20 ms (50 Hz) \u2192 ~205\u2013410 ticks a 12 bits\n    duty = map(grados, 0, 180, 205, 410);\n    ledcWrite(SERVO1, duty);\n    delay(1000);\n  }\n  delay(1000);\n}\n</code></pre>"},{"location":"Segundo%20Parcial/Actvidad%207.html#notas-practicas","title":"Notas pr\u00e1cticas","text":"<ul> <li>Si el servo tiembla: compartir GND, usar cables cortos y subir corriente disponible en 5 V; evitar alimentar desde el pin 5V del ESP32 si el consumo es alto.   </li> <li>Para varios servos: duplicar la conexi\u00f3n de Vcc y se\u00f1al a distintos GPIOs y prever una fuente de 5 V dedicada con suficiente corriente. </li> </ul>"},{"location":"Segundo%20Parcial/Actvidad%207.html#evidencias","title":"Evidencias","text":""}]}